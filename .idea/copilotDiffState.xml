<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/src/main/kotlin/com/example/demo/config/UndertowWebSocketConfig.kt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/kotlin/com/example/demo/config/UndertowWebSocketConfig.kt" />
              <option name="originalContent" value="package com.example.demo.config&#10;&#10;import io.undertow.server.DefaultByteBufferPool&#10;import io.undertow.websockets.jsr.WebSocketDeploymentInfo&#10;import org.springframework.boot.web.embedded.undertow.UndertowDeploymentInfoCustomizer&#10;import org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory&#10;import org.springframework.context.annotation.Bean&#10;import org.springframework.context.annotation.Configuration&#10;import org.springframework.core.env.Environment&#10;import org.springframework.util.unit.DataSize&#10;&#10;@Configuration&#10;class UndertowWebSocketConfig(&#10;    private val env: Environment&#10;) {&#10;&#10;    @Bean&#10;    fun undertowServletWebServerFactory(): UndertowServletWebServerFactory {&#10;        val factory = UndertowServletWebServerFactory()&#10;&#10;        val customizer = UndertowDeploymentInfoCustomizer { di -&gt;&#10;            // Undertow の WebSocket 用バッファプールを設定（警告 UT026010 の解消）&#10;            val direct = true // 直接バッファ（GC 負荷軽減）&#10;            val dataSize: DataSize = env.getProperty(&#10;                &quot;server.undertow.buffer-size&quot;,&#10;                DataSize::class.java,&#10;                DataSize.ofKilobytes(16)&#10;            )&#10;            val bufferSize: Int = dataSize.toBytes().coerceAtMost(Int.MAX_VALUE.toLong()).toInt()&#10;            val wsInfo = WebSocketDeploymentInfo()&#10;            wsInfo.buffers = DefaultByteBufferPool(direct, bufferSize)&#10;            (di as io.undertow.servlet.api.DeploymentInfo)&#10;                .addServletContextAttribute(WebSocketDeploymentInfo.ATTRIBUTE_NAME, wsInfo)&#10;        }&#10;&#10;        factory.setDeploymentInfoCustomizers(listOf(customizer))&#10;        return factory&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.example.demo.config&#13;&#10;&#13;&#10;import org.springframework.context.annotation.Configuration&#13;&#10;&#13;&#10;@Configuration&#13;&#10;class UndertowWebSocketConfig {&#13;&#10;    // Undertow を削除したため本クラスは空のプレースホルダです。&#13;&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/main/resources/application.properties">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/resources/application.properties" />
              <option name="originalContent" value="# Application Configuration&#10;spring.application.name=demo&#10;&#10;# Database Configuration&#10;spring.datasource.url=jdbc:postgresql://localhost:5432/demo_db&#10;spring.datasource.username=demo_user&#10;spring.datasource.password=demo_pass&#10;&#10;# Flyway Configuration&#10;spring.flyway.enabled=true&#10;&#10;# Session Configuration&#10;spring.session.jdbc.initialize-schema=always&#10;&#10;# MyBatis Configuration&#10;mybatis.mapper-locations=classpath:mapper/*.xml&#10;&#10;# --- Performance: HTTP response compression ---&#10;server.compression.enabled=true&#10;server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json,application/xml&#10;server.compression.min-response-size=1024&#10;&#10;# --- Static resources: content hash versioning &amp; cache ---&#10;spring.web.resources.chain.enabled=true&#10;spring.web.resources.chain.strategy.content.enabled=true&#10;spring.web.resources.chain.strategy.content.paths=/**&#10;spring.web.resources.cache.period=7d&#10;&#10;# --- Undertow tuning ---&#10;# HTTP/2 を有効化（ALPN + TLS が必要）&#10;server.http2.enabled=true&#10;# ネットワーク I/O に直接バッファを使用（GC 負荷を軽減）&#10;server.undertow.direct-buffers=true&#10;# 1バッファのサイズ（既定は 16KB 程度）。I/O プロファイルに合わせて調整。&#10;server.undertow.buffer-size=16KB&#10;# 無通信時のタイムアウト。長時間ハングする接続を切る（必要に応じて調整）。&#10;server.undertow.no-request-timeout=30s&#10;&#10;# アクセスログ（性能監視・検証用）&#10;server.undertow.accesslog.enabled=true&#10;server.undertow.accesslog.dir=logs&#10;server.undertow.accesslog.pattern=combined&#10;server.undertow.accesslog.prefix=access&#10;server.undertow.accesslog.suffix=.log&#10;server.undertow.accesslog.rotate=true&#10;&#10;# スレッド数はデフォルト（CPU × 2 の IO、IO × 8 の worker）が一般に最適。&#10;# 必要になったら明示設定（例）:&#10;# server.undertow.threads.io=8&#10;# server.undertow.threads.worker=64&#10;" />
              <option name="updatedContent" value="# Application Configuration&#10;spring.application.name=demo&#10;&#10;# Database Configuration&#10;spring.datasource.url=jdbc:postgresql://localhost:5432/demo_db&#10;spring.datasource.username=demo_user&#10;spring.datasource.password=demo_pass&#10;&#10;# Flyway Configuration&#10;spring.flyway.enabled=true&#10;&#10;# Session Configuration&#10;spring.session.jdbc.initialize-schema=always&#10;&#10;# MyBatis Configuration&#10;mybatis.mapper-locations=classpath:mapper/*.xml&#10;&#10;# --- Performance: HTTP response compression ---&#10;server.compression.enabled=true&#10;server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json,application/xml&#10;server.compression.min-response-size=1024&#10;&#10;# --- Static resources: content hash versioning &amp; cache ---&#10;spring.web.resources.chain.enabled=true&#10;spring.web.resources.chain.strategy.content.enabled=true&#10;spring.web.resources.chain.strategy.content.paths=/**&#10;spring.web.resources.cache.period=7d&#10;&#10;# --- HTTP/2 (TLS/ALPNが前提。利用しない場合は無効化可) ---&#10;server.http2.enabled=true&#10;&#10;# --- Access log (Tomcat) ---&#10;server.tomcat.accesslog.enabled=true&#10;server.tomcat.accesslog.directory=logs&#10;server.tomcat.accesslog.prefix=access&#10;server.tomcat.accesslog.suffix=.log&#10;server.tomcat.accesslog.pattern=combined&#10;server.tomcat.accesslog.rotate=true" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>